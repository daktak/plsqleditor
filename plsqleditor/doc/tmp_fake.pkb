CREATE OR REPLACE PACKAGE BODY fake IS
/*
 * File documentation goes here.  This is required for the outline to work correctly.
 *
 * This file represents a package called "fake" in a schema called "tmp".
 *
 * This file should be located in a directory called "tmp" (to match the schema).
 *
 * Below here are the details for the header.  This is verbatim generated into the header file.
 * The verbatim copying starts below the line with the word "header" and the word "details" next
 * to each other.  You should not put those words together anywhere else in this file documentation
 * section.  This would cause the outline parser (and auto completion parser) to fail.
 *   |   |   |
 *  \|/ \|/ \|/
 *   .   .   .
 * header details
   gc_class_name CONSTANT VARCHAR2(50) := 'Fake';
   gc_package_name CONSTANT VARCHAR2(50) := upper(gc_class_name);
 * end header details
 *   ^   ^   ^
 *  /|\ /|\ /|\
 *   |   |   |
 * The line above (with the header's details ending mentioned) indicates the end of 
 * the verbatim copying.
 */

/**
 * This is a test file.  This part of the documentation is generated as a package header
 * when using pldoc generation.  This is indicated by the use of the headcom tag below.
 *
 * @headcom
 */
 
   /**
    * This is a generic pl doc method documentation.  It is auto generated by the typing of
    * the "/**" and pressing enter.  
    * There is also auto completion of tags within this section, auto completion of parameters
    * when using content assist after the word "@param" and standard code auto completion after
    * "@refer", "@see" and "{@link".
    * Using html tags is <b>highlighted</b> (as seen by the bold markers).
    *
    * @param pin_object_id the object id of this call.
    * 
    * @param pin_traversal_context_id a dummy number
    *
    * @return - a LinkSequence object_id
    */
   FUNCTION traverse(
      pin_object_id  IN NUMBER,
      pin_traversalcontext_id IN NUMBER)
   RETURN NUMBER
   AS
      ln_number NUMBER;
      ls_val    VARCHAR2(100);
   BEGIN
       ls_val := gc_package_name;
       ln_number := 1;
      RETURN ln_number;
   END traverse;

--------------------------------------------------------------
/**
 * This method will be private because of the use of the "@private" tag,
 * so it will not appear in the header file, but it will have pl doc
 * documentation generated.
 *
 * @param pin_obj The id of the object to operate on.
 * @param pin_extra
 * @return NUMBER
 *
 * @private
 */
FUNCTION do_something(pin_obj IN NUMBER,
                      pin_extra IN VARCHAR2)
                       RETURN NUMBER IS
BEGIN
	RETURN 0;
END do_something;
--------------------------------------------------------------
/*
 * This method will not be in the header file, and will not have pl documentation generated
 * because is has only one star after the opening slash.
 * @return VARCHAR2 (useless, because this won't be pl doc'ed.
 */
FUNCTION get_name RETURN VARCHAR2 IS
BEGIN
	RETURN gc_class_name;
END get_name;
--------------------------------------------------------------
END fake;

/
SHOW ERRORS PACKAGE BODY fake
